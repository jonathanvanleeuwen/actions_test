{% raw %}name: Semantic Release and test coverage
on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  covreport:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      # Run coverage report
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build coverage file
        run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app tests/ | tee pytest-coverage.txt

      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./pytest-coverage.txt

      - name: Update Readme with Coverage Html
        run: |
          sed -i '/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\n\${{ steps.coverageComment.outputs.coverageHtml }}\n<!-- Pytest Coverage Comment:End -->' ./README.md

      - name: Delete cov reports
        run: rm ./pytest-coverage.txt ./pytest.xml

      - name: Commit & Push changes to Readme
        uses: actions-js/push@master
        with:
          message: Update coverage on Readme
          github_token: ${{ secrets.SEM_RELEASE }}

  release:
    needs: covreport
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    concurrency: release

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.SEM_RELEASE }}

      - run: git pull

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.SEM_RELEASE  }}

{%- endraw %}